//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "86415f4db6445b88")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.2")]

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Home</summary>
	[PublishedContentModel("home")]
	public partial class Home : PublishedContentModel, IContactInfo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address line 1: Please provide the first line of your address
		///</summary>
		[ImplementPropertyType("addressLine1")]
		public string AddressLine1
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetAddressLine1(this); }
		}

		///<summary>
		/// Address line 2: Please provide your second line of your address
		///</summary>
		[ImplementPropertyType("addressLine2")]
		public string AddressLine2
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetAddressLine2(this); }
		}

		///<summary>
		/// Closing Time: Please provide the day when you are not open
		///</summary>
		[ImplementPropertyType("closingTime")]
		public string ClosingTime
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetClosingTime(this); }
		}

		///<summary>
		/// email: Please provide your email address
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetEmail(this); }
		}

		///<summary>
		/// Facebook Page: Please provide a URL to you Facebook page
		///</summary>
		[ImplementPropertyType("facebookPage")]
		public string FacebookPage
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetFacebookPage(this); }
		}

		///<summary>
		/// Image Picker: Please select images from the media library
		///</summary>
		[ImplementPropertyType("imagePicker")]
		public IEnumerable<IPublishedContent> ImagePicker
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetImagePicker(this); }
		}

		///<summary>
		/// Latitude: Please provide the latitude coordinate of your business
		///</summary>
		[ImplementPropertyType("latitude")]
		public string Latitude
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetLatitude(this); }
		}

		///<summary>
		/// Longitude: Please provide the longitude coordinates of your business
		///</summary>
		[ImplementPropertyType("longitude")]
		public string Longitude
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetLongitude(this); }
		}

		///<summary>
		/// Opening Times: Please provide your opening times
		///</summary>
		[ImplementPropertyType("openingTimes")]
		public string OpeningTimes
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetOpeningTimes(this); }
		}

		///<summary>
		/// Phone number: Please provide your phone number
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetPhoneNumber(this); }
		}

		///<summary>
		/// Postcode: Please provide your Postcode
		///</summary>
		[ImplementPropertyType("postcode")]
		public string Postcode
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetPostcode(this); }
		}

		///<summary>
		/// Text for phone number: Please add some text to you phone number
		///</summary>
		[ImplementPropertyType("textForPhoneNumber")]
		public string TextForPhoneNumber
		{
			get { return Umbraco.Web.PublishedContentModels.ContactInfo.GetTextForPhoneNumber(this); }
		}
	}

	/// <summary>About us</summary>
	[PublishedContentModel("aboutUs")]
	public partial class AboutUs : PublishedContentModel, IAboutUsProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "aboutUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AboutUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AboutUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Company name: Please provide the name of the company
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetCompanyName(this); }
		}

		///<summary>
		/// Page Content: Please provide some content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetPageContent(this); }
		}

		///<summary>
		/// Page Title: Please provide the title for this page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetPageTitle(this); }
		}

		///<summary>
		/// Position: Please provide your position within the company
		///</summary>
		[ImplementPropertyType("position")]
		public string Position
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetPosition(this); }
		}

		///<summary>
		/// Signature: Please provide a name fro the content
		///</summary>
		[ImplementPropertyType("signature")]
		public string Signature
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetSignature(this); }
		}

		///<summary>
		/// Team Photo: Please upload a photo
		///</summary>
		[ImplementPropertyType("teamPhoto")]
		public IPublishedContent TeamPhoto
		{
			get { return Umbraco.Web.PublishedContentModels.AboutUsProperties.GetTeamPhoto(this); }
		}
	}

	/// <summary>Contact us</summary>
	[PublishedContentModel("contactUs")]
	public partial class ContactUs : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Service</summary>
	[PublishedContentModel("service")]
	public partial class Service : PublishedContentModel, IServicesProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "service";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Service(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Service, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main Content: Please provide the main service content
		///</summary>
		[ImplementPropertyType("mainContent")]
		public IHtmlString MainContent
		{
			get { return Umbraco.Web.PublishedContentModels.ServicesProperties.GetMainContent(this); }
		}

		///<summary>
		/// Title: Please provide the title of the page
		///</summary>
		[ImplementPropertyType("servicesTitle")]
		public string ServicesTitle
		{
			get { return Umbraco.Web.PublishedContentModels.ServicesProperties.GetServicesTitle(this); }
		}
	}

	// Mixin content Type 1103 with alias "contactInfo"
	/// <summary>Base Properties</summary>
	public partial interface IContactInfo : IPublishedContent
	{
		/// <summary>Address line 1</summary>
		string AddressLine1 { get; }

		/// <summary>Address line 2</summary>
		string AddressLine2 { get; }

		/// <summary>Closing Time</summary>
		string ClosingTime { get; }

		/// <summary>email</summary>
		string Email { get; }

		/// <summary>Facebook Page</summary>
		string FacebookPage { get; }

		/// <summary>Image Picker</summary>
		IEnumerable<IPublishedContent> ImagePicker { get; }

		/// <summary>Latitude</summary>
		string Latitude { get; }

		/// <summary>Longitude</summary>
		string Longitude { get; }

		/// <summary>Opening Times</summary>
		string OpeningTimes { get; }

		/// <summary>Phone number</summary>
		string PhoneNumber { get; }

		/// <summary>Postcode</summary>
		string Postcode { get; }

		/// <summary>Text for phone number</summary>
		string TextForPhoneNumber { get; }
	}

	/// <summary>Base Properties</summary>
	[PublishedContentModel("contactInfo")]
	public partial class ContactInfo : PublishedContentModel, IContactInfo
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactInfo";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactInfo(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactInfo, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address line 1: Please provide the first line of your address
		///</summary>
		[ImplementPropertyType("addressLine1")]
		public string AddressLine1
		{
			get { return GetAddressLine1(this); }
		}

		/// <summary>Static getter for Address line 1</summary>
		public static string GetAddressLine1(IContactInfo that) { return that.GetPropertyValue<string>("addressLine1"); }

		///<summary>
		/// Address line 2: Please provide your second line of your address
		///</summary>
		[ImplementPropertyType("addressLine2")]
		public string AddressLine2
		{
			get { return GetAddressLine2(this); }
		}

		/// <summary>Static getter for Address line 2</summary>
		public static string GetAddressLine2(IContactInfo that) { return that.GetPropertyValue<string>("addressLine2"); }

		///<summary>
		/// Closing Time: Please provide the day when you are not open
		///</summary>
		[ImplementPropertyType("closingTime")]
		public string ClosingTime
		{
			get { return GetClosingTime(this); }
		}

		/// <summary>Static getter for Closing Time</summary>
		public static string GetClosingTime(IContactInfo that) { return that.GetPropertyValue<string>("closingTime"); }

		///<summary>
		/// email: Please provide your email address
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return GetEmail(this); }
		}

		/// <summary>Static getter for email</summary>
		public static string GetEmail(IContactInfo that) { return that.GetPropertyValue<string>("email"); }

		///<summary>
		/// Facebook Page: Please provide a URL to you Facebook page
		///</summary>
		[ImplementPropertyType("facebookPage")]
		public string FacebookPage
		{
			get { return GetFacebookPage(this); }
		}

		/// <summary>Static getter for Facebook Page</summary>
		public static string GetFacebookPage(IContactInfo that) { return that.GetPropertyValue<string>("facebookPage"); }

		///<summary>
		/// Image Picker: Please select images from the media library
		///</summary>
		[ImplementPropertyType("imagePicker")]
		public IEnumerable<IPublishedContent> ImagePicker
		{
			get { return GetImagePicker(this); }
		}

		/// <summary>Static getter for Image Picker</summary>
		public static IEnumerable<IPublishedContent> GetImagePicker(IContactInfo that) { return that.GetPropertyValue<IEnumerable<IPublishedContent>>("imagePicker"); }

		///<summary>
		/// Latitude: Please provide the latitude coordinate of your business
		///</summary>
		[ImplementPropertyType("latitude")]
		public string Latitude
		{
			get { return GetLatitude(this); }
		}

		/// <summary>Static getter for Latitude</summary>
		public static string GetLatitude(IContactInfo that) { return that.GetPropertyValue<string>("latitude"); }

		///<summary>
		/// Longitude: Please provide the longitude coordinates of your business
		///</summary>
		[ImplementPropertyType("longitude")]
		public string Longitude
		{
			get { return GetLongitude(this); }
		}

		/// <summary>Static getter for Longitude</summary>
		public static string GetLongitude(IContactInfo that) { return that.GetPropertyValue<string>("longitude"); }

		///<summary>
		/// Opening Times: Please provide your opening times
		///</summary>
		[ImplementPropertyType("openingTimes")]
		public string OpeningTimes
		{
			get { return GetOpeningTimes(this); }
		}

		/// <summary>Static getter for Opening Times</summary>
		public static string GetOpeningTimes(IContactInfo that) { return that.GetPropertyValue<string>("openingTimes"); }

		///<summary>
		/// Phone number: Please provide your phone number
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return GetPhoneNumber(this); }
		}

		/// <summary>Static getter for Phone number</summary>
		public static string GetPhoneNumber(IContactInfo that) { return that.GetPropertyValue<string>("phoneNumber"); }

		///<summary>
		/// Postcode: Please provide your Postcode
		///</summary>
		[ImplementPropertyType("postcode")]
		public string Postcode
		{
			get { return GetPostcode(this); }
		}

		/// <summary>Static getter for Postcode</summary>
		public static string GetPostcode(IContactInfo that) { return that.GetPropertyValue<string>("postcode"); }

		///<summary>
		/// Text for phone number: Please add some text to you phone number
		///</summary>
		[ImplementPropertyType("textForPhoneNumber")]
		public string TextForPhoneNumber
		{
			get { return GetTextForPhoneNumber(this); }
		}

		/// <summary>Static getter for Text for phone number</summary>
		public static string GetTextForPhoneNumber(IContactInfo that) { return that.GetPropertyValue<string>("textForPhoneNumber"); }
	}

	// Mixin content Type 1107 with alias "aboutUsProperties"
	/// <summary>About Us Properties</summary>
	public partial interface IAboutUsProperties : IPublishedContent
	{
		/// <summary>Company name</summary>
		string CompanyName { get; }

		/// <summary>Page Content</summary>
		IHtmlString PageContent { get; }

		/// <summary>Page Title</summary>
		string PageTitle { get; }

		/// <summary>Position</summary>
		string Position { get; }

		/// <summary>Signature</summary>
		string Signature { get; }

		/// <summary>Team Photo</summary>
		IPublishedContent TeamPhoto { get; }
	}

	/// <summary>About Us Properties</summary>
	[PublishedContentModel("aboutUsProperties")]
	public partial class AboutUsProperties : PublishedContentModel, IAboutUsProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "aboutUsProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AboutUsProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AboutUsProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Company name: Please provide the name of the company
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return GetCompanyName(this); }
		}

		/// <summary>Static getter for Company name</summary>
		public static string GetCompanyName(IAboutUsProperties that) { return that.GetPropertyValue<string>("companyName"); }

		///<summary>
		/// Page Content: Please provide some content
		///</summary>
		[ImplementPropertyType("pageContent")]
		public IHtmlString PageContent
		{
			get { return GetPageContent(this); }
		}

		/// <summary>Static getter for Page Content</summary>
		public static IHtmlString GetPageContent(IAboutUsProperties that) { return that.GetPropertyValue<IHtmlString>("pageContent"); }

		///<summary>
		/// Page Title: Please provide the title for this page
		///</summary>
		[ImplementPropertyType("pageTitle")]
		public string PageTitle
		{
			get { return GetPageTitle(this); }
		}

		/// <summary>Static getter for Page Title</summary>
		public static string GetPageTitle(IAboutUsProperties that) { return that.GetPropertyValue<string>("pageTitle"); }

		///<summary>
		/// Position: Please provide your position within the company
		///</summary>
		[ImplementPropertyType("position")]
		public string Position
		{
			get { return GetPosition(this); }
		}

		/// <summary>Static getter for Position</summary>
		public static string GetPosition(IAboutUsProperties that) { return that.GetPropertyValue<string>("position"); }

		///<summary>
		/// Signature: Please provide a name fro the content
		///</summary>
		[ImplementPropertyType("signature")]
		public string Signature
		{
			get { return GetSignature(this); }
		}

		/// <summary>Static getter for Signature</summary>
		public static string GetSignature(IAboutUsProperties that) { return that.GetPropertyValue<string>("signature"); }

		///<summary>
		/// Team Photo: Please upload a photo
		///</summary>
		[ImplementPropertyType("teamPhoto")]
		public IPublishedContent TeamPhoto
		{
			get { return GetTeamPhoto(this); }
		}

		/// <summary>Static getter for Team Photo</summary>
		public static IPublishedContent GetTeamPhoto(IAboutUsProperties that) { return that.GetPropertyValue<IPublishedContent>("teamPhoto"); }
	}

	/// <summary>Team Member Properties</summary>
	[PublishedContentModel("teamMemberProperties")]
	public partial class TeamMemberProperties : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "teamMemberProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TeamMemberProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TeamMemberProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Email: Please provide the email address of a team mamber
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return this.GetPropertyValue<string>("email"); }
		}

		///<summary>
		/// Facebook Profile: Please provide the Facebook profile of a team member. Copy and past it from the browser
		///</summary>
		[ImplementPropertyType("facebook")]
		public string Facebook
		{
			get { return this.GetPropertyValue<string>("facebook"); }
		}

		///<summary>
		/// Gmail Profile: Please provide the gmail profile of a team  member. Copy and past it from the browser
		///</summary>
		[ImplementPropertyType("gmail")]
		public string Gmail
		{
			get { return this.GetPropertyValue<string>("gmail"); }
		}

		///<summary>
		/// Linked in Profile: Please provide the linked in profile of a team member. Copy and past it from the browser
		///</summary>
		[ImplementPropertyType("linkedIn")]
		public string LinkedIn
		{
			get { return this.GetPropertyValue<string>("linkedIn"); }
		}

		///<summary>
		/// Position: Please provide a position of a team meber
		///</summary>
		[ImplementPropertyType("memberPosition")]
		public string MemberPosition
		{
			get { return this.GetPropertyValue<string>("memberPosition"); }
		}

		///<summary>
		/// Personal image: Please provide an image about you team member
		///</summary>
		[ImplementPropertyType("personalImage")]
		public IPublishedContent PersonalImage
		{
			get { return this.GetPropertyValue<IPublishedContent>("personalImage"); }
		}

		///<summary>
		/// Phone number: Please provide a phone number of a team member
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return this.GetPropertyValue<string>("phoneNumber"); }
		}

		///<summary>
		/// Team Member Name: Please provide the name of a Team me,ber
		///</summary>
		[ImplementPropertyType("teamMemberName")]
		public string TeamMemberName
		{
			get { return this.GetPropertyValue<string>("teamMemberName"); }
		}

		///<summary>
		/// Twitter Profile: Please Provide the twitter profile of a team member. Copy and past it from the browser
		///</summary>
		[ImplementPropertyType("twitter")]
		public string Twitter
		{
			get { return this.GetPropertyValue<string>("twitter"); }
		}
	}

	// Mixin content Type 1121 with alias "servicesProperties"
	/// <summary>Services Properties</summary>
	public partial interface IServicesProperties : IPublishedContent
	{
		/// <summary>Main Content</summary>
		IHtmlString MainContent { get; }

		/// <summary>Title</summary>
		string ServicesTitle { get; }
	}

	/// <summary>Services Properties</summary>
	[PublishedContentModel("servicesProperties")]
	public partial class ServicesProperties : PublishedContentModel, IServicesProperties
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "servicesProperties";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ServicesProperties(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ServicesProperties, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Main Content: Please provide the main service content
		///</summary>
		[ImplementPropertyType("mainContent")]
		public IHtmlString MainContent
		{
			get { return GetMainContent(this); }
		}

		/// <summary>Static getter for Main Content</summary>
		public static IHtmlString GetMainContent(IServicesProperties that) { return that.GetPropertyValue<IHtmlString>("mainContent"); }

		///<summary>
		/// Title: Please provide the title of the page
		///</summary>
		[ImplementPropertyType("servicesTitle")]
		public string ServicesTitle
		{
			get { return GetServicesTitle(this); }
		}

		/// <summary>Static getter for Title</summary>
		public static string GetServicesTitle(IServicesProperties that) { return that.GetPropertyValue<string>("servicesTitle"); }
	}

	/// <summary>Search</summary>
	[PublishedContentModel("search")]
	public partial class Search : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "search";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Search(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Search, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Car Details</summary>
	[PublishedContentModel("carDetails")]
	public partial class CarDetails : PublishedContentModel, ICarFeatures
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "carDetails";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CarDetails(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CarDetails, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// CO2 Emission
		///</summary>
		[ImplementPropertyType("cO2Emission")]
		public int CO2Emission
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetCO2Emission(this); }
		}

		///<summary>
		/// Engin Power
		///</summary>
		[ImplementPropertyType("enginPower")]
		public int EnginPower
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetEnginPower(this); }
		}

		///<summary>
		/// Engin size
		///</summary>
		[ImplementPropertyType("enginSize")]
		public int EnginSize
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetEnginSize(this); }
		}

		///<summary>
		/// Extra features
		///</summary>
		[ImplementPropertyType("extraFeatures")]
		public IEnumerable<string> ExtraFeatures
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetExtraFeatures(this); }
		}

		///<summary>
		/// Featured
		///</summary>
		[ImplementPropertyType("featured")]
		public bool Featured
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFeatured(this); }
		}

		///<summary>
		/// Fuel
		///</summary>
		[ImplementPropertyType("fuel")]
		public string Fuel
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFuel(this); }
		}

		///<summary>
		/// Fuel Consumption (combined)
		///</summary>
		[ImplementPropertyType("fuelConsumptionCombined")]
		public int FuelConsumptionCombined
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFuelConsumptionCombined(this); }
		}

		///<summary>
		/// Fuel Consumption (extra urban)
		///</summary>
		[ImplementPropertyType("fuelConsumptionExtraUrban")]
		public int FuelConsumptionExtraUrban
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFuelConsumptionExtraUrban(this); }
		}

		///<summary>
		/// Fuel Consumption(urban)
		///</summary>
		[ImplementPropertyType("fuelConsumptionUrban")]
		public int FuelConsumptionUrban
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFuelConsumptionUrban(this); }
		}

		///<summary>
		/// Fuel tank capacity
		///</summary>
		[ImplementPropertyType("fuelTankCapacity")]
		public int FuelTankCapacity
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetFuelTankCapacity(this); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("height")]
		public int Height
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetHeight(this); }
		}

		///<summary>
		/// Last serviced
		///</summary>
		[ImplementPropertyType("lastServiced")]
		public string LastServiced
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetLastServiced(this); }
		}

		///<summary>
		/// Length
		///</summary>
		[ImplementPropertyType("length")]
		public int Length
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetLength(this); }
		}

		///<summary>
		/// Luggage capacity
		///</summary>
		[ImplementPropertyType("luggageCapacity")]
		public int LuggageCapacity
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetLuggageCapacity(this); }
		}

		///<summary>
		/// Milage
		///</summary>
		[ImplementPropertyType("milage")]
		public int Milage
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetMilage(this); }
		}

		///<summary>
		/// Model
		///</summary>
		[ImplementPropertyType("model")]
		public string Model
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetModel(this); }
		}

		///<summary>
		/// MOT
		///</summary>
		[ImplementPropertyType("mot")]
		public DateTime Mot
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetMot(this); }
		}

		///<summary>
		/// Number of seats
		///</summary>
		[ImplementPropertyType("numberOfSeats")]
		public int NumberOfSeats
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetNumberOfSeats(this); }
		}

		///<summary>
		/// Number of Valves
		///</summary>
		[ImplementPropertyType("numberOfValves")]
		public int NumberOfValves
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetNumberOfValves(this); }
		}

		///<summary>
		/// Owner
		///</summary>
		[ImplementPropertyType("owner")]
		public string Owner
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetOwner(this); }
		}

		///<summary>
		/// Pod Image
		///</summary>
		[ImplementPropertyType("podImage")]
		public IPublishedContent PodImage
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetPodImage(this); }
		}

		///<summary>
		/// Price
		///</summary>
		[ImplementPropertyType("price")]
		public int Price
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetPrice(this); }
		}

		///<summary>
		/// Registration year
		///</summary>
		[ImplementPropertyType("registrationYear")]
		public DateTime RegistrationYear
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetRegistrationYear(this); }
		}

		///<summary>
		/// Service History
		///</summary>
		[ImplementPropertyType("serviceHistory")]
		public string ServiceHistory
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetServiceHistory(this); }
		}

		///<summary>
		/// Top Speed
		///</summary>
		[ImplementPropertyType("topSpeed")]
		public int TopSpeed
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetTopSpeed(this); }
		}

		///<summary>
		/// Transmission
		///</summary>
		[ImplementPropertyType("transmission")]
		public string Transmission
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetTransmission(this); }
		}

		///<summary>
		/// Tyre Size
		///</summary>
		[ImplementPropertyType("tyreSize")]
		public string TyreSize
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetTyreSize(this); }
		}

		///<summary>
		/// Vehicle description: Please provide a short description of the car
		///</summary>
		[ImplementPropertyType("vehicleDescription")]
		public string VehicleDescription
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetVehicleDescription(this); }
		}

		///<summary>
		/// Vehicle tax band
		///</summary>
		[ImplementPropertyType("vehicleTaxBand")]
		public string VehicleTaxBand
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetVehicleTaxBand(this); }
		}

		///<summary>
		/// Warranty
		///</summary>
		[ImplementPropertyType("warranty")]
		public string Warranty
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetWarranty(this); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("width")]
		public int Width
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetWidth(this); }
		}

		///<summary>
		/// 0-60
		///</summary>
		[ImplementPropertyType("zeroToSixty")]
		public int ZeroToSixty
		{
			get { return Umbraco.Web.PublishedContentModels.CarFeatures.GetZeroToSixty(this); }
		}
	}

	// Mixin content Type 4133 with alias "carFeatures"
	/// <summary>Car Features</summary>
	public partial interface ICarFeatures : IPublishedContent
	{
		/// <summary>CO2 Emission</summary>
		int CO2Emission { get; }

		/// <summary>Engin Power</summary>
		int EnginPower { get; }

		/// <summary>Engin size</summary>
		int EnginSize { get; }

		/// <summary>Extra features</summary>
		IEnumerable<string> ExtraFeatures { get; }

		/// <summary>Featured</summary>
		bool Featured { get; }

		/// <summary>Fuel</summary>
		string Fuel { get; }

		/// <summary>Fuel Consumption (combined)</summary>
		int FuelConsumptionCombined { get; }

		/// <summary>Fuel Consumption (extra urban)</summary>
		int FuelConsumptionExtraUrban { get; }

		/// <summary>Fuel Consumption(urban)</summary>
		int FuelConsumptionUrban { get; }

		/// <summary>Fuel tank capacity</summary>
		int FuelTankCapacity { get; }

		/// <summary>Height</summary>
		int Height { get; }

		/// <summary>Last serviced</summary>
		string LastServiced { get; }

		/// <summary>Length</summary>
		int Length { get; }

		/// <summary>Luggage capacity</summary>
		int LuggageCapacity { get; }

		/// <summary>Milage</summary>
		int Milage { get; }

		/// <summary>Model</summary>
		string Model { get; }

		/// <summary>MOT</summary>
		DateTime Mot { get; }

		/// <summary>Number of seats</summary>
		int NumberOfSeats { get; }

		/// <summary>Number of Valves</summary>
		int NumberOfValves { get; }

		/// <summary>Owner</summary>
		string Owner { get; }

		/// <summary>Pod Image</summary>
		IPublishedContent PodImage { get; }

		/// <summary>Price</summary>
		int Price { get; }

		/// <summary>Registration year</summary>
		DateTime RegistrationYear { get; }

		/// <summary>Service History</summary>
		string ServiceHistory { get; }

		/// <summary>Top Speed</summary>
		int TopSpeed { get; }

		/// <summary>Transmission</summary>
		string Transmission { get; }

		/// <summary>Tyre Size</summary>
		string TyreSize { get; }

		/// <summary>Vehicle description</summary>
		string VehicleDescription { get; }

		/// <summary>Vehicle tax band</summary>
		string VehicleTaxBand { get; }

		/// <summary>Warranty</summary>
		string Warranty { get; }

		/// <summary>Width</summary>
		int Width { get; }

		/// <summary>0-60</summary>
		int ZeroToSixty { get; }
	}

	/// <summary>Car Features</summary>
	[PublishedContentModel("carFeatures")]
	public partial class CarFeatures : PublishedContentModel, ICarFeatures
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "carFeatures";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CarFeatures(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CarFeatures, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// CO2 Emission
		///</summary>
		[ImplementPropertyType("cO2Emission")]
		public int CO2Emission
		{
			get { return GetCO2Emission(this); }
		}

		/// <summary>Static getter for CO2 Emission</summary>
		public static int GetCO2Emission(ICarFeatures that) { return that.GetPropertyValue<int>("cO2Emission"); }

		///<summary>
		/// Engin Power
		///</summary>
		[ImplementPropertyType("enginPower")]
		public int EnginPower
		{
			get { return GetEnginPower(this); }
		}

		/// <summary>Static getter for Engin Power</summary>
		public static int GetEnginPower(ICarFeatures that) { return that.GetPropertyValue<int>("enginPower"); }

		///<summary>
		/// Engin size
		///</summary>
		[ImplementPropertyType("enginSize")]
		public int EnginSize
		{
			get { return GetEnginSize(this); }
		}

		/// <summary>Static getter for Engin size</summary>
		public static int GetEnginSize(ICarFeatures that) { return that.GetPropertyValue<int>("enginSize"); }

		///<summary>
		/// Extra features
		///</summary>
		[ImplementPropertyType("extraFeatures")]
		public IEnumerable<string> ExtraFeatures
		{
			get { return GetExtraFeatures(this); }
		}

		/// <summary>Static getter for Extra features</summary>
		public static IEnumerable<string> GetExtraFeatures(ICarFeatures that) { return that.GetPropertyValue<IEnumerable<string>>("extraFeatures"); }

		///<summary>
		/// Featured
		///</summary>
		[ImplementPropertyType("featured")]
		public bool Featured
		{
			get { return GetFeatured(this); }
		}

		/// <summary>Static getter for Featured</summary>
		public static bool GetFeatured(ICarFeatures that) { return that.GetPropertyValue<bool>("featured"); }

		///<summary>
		/// Fuel
		///</summary>
		[ImplementPropertyType("fuel")]
		public string Fuel
		{
			get { return GetFuel(this); }
		}

		/// <summary>Static getter for Fuel</summary>
		public static string GetFuel(ICarFeatures that) { return that.GetPropertyValue<string>("fuel"); }

		///<summary>
		/// Fuel Consumption (combined)
		///</summary>
		[ImplementPropertyType("fuelConsumptionCombined")]
		public int FuelConsumptionCombined
		{
			get { return GetFuelConsumptionCombined(this); }
		}

		/// <summary>Static getter for Fuel Consumption (combined)</summary>
		public static int GetFuelConsumptionCombined(ICarFeatures that) { return that.GetPropertyValue<int>("fuelConsumptionCombined"); }

		///<summary>
		/// Fuel Consumption (extra urban)
		///</summary>
		[ImplementPropertyType("fuelConsumptionExtraUrban")]
		public int FuelConsumptionExtraUrban
		{
			get { return GetFuelConsumptionExtraUrban(this); }
		}

		/// <summary>Static getter for Fuel Consumption (extra urban)</summary>
		public static int GetFuelConsumptionExtraUrban(ICarFeatures that) { return that.GetPropertyValue<int>("fuelConsumptionExtraUrban"); }

		///<summary>
		/// Fuel Consumption(urban)
		///</summary>
		[ImplementPropertyType("fuelConsumptionUrban")]
		public int FuelConsumptionUrban
		{
			get { return GetFuelConsumptionUrban(this); }
		}

		/// <summary>Static getter for Fuel Consumption(urban)</summary>
		public static int GetFuelConsumptionUrban(ICarFeatures that) { return that.GetPropertyValue<int>("fuelConsumptionUrban"); }

		///<summary>
		/// Fuel tank capacity
		///</summary>
		[ImplementPropertyType("fuelTankCapacity")]
		public int FuelTankCapacity
		{
			get { return GetFuelTankCapacity(this); }
		}

		/// <summary>Static getter for Fuel tank capacity</summary>
		public static int GetFuelTankCapacity(ICarFeatures that) { return that.GetPropertyValue<int>("fuelTankCapacity"); }

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("height")]
		public int Height
		{
			get { return GetHeight(this); }
		}

		/// <summary>Static getter for Height</summary>
		public static int GetHeight(ICarFeatures that) { return that.GetPropertyValue<int>("height"); }

		///<summary>
		/// Last serviced
		///</summary>
		[ImplementPropertyType("lastServiced")]
		public string LastServiced
		{
			get { return GetLastServiced(this); }
		}

		/// <summary>Static getter for Last serviced</summary>
		public static string GetLastServiced(ICarFeatures that) { return that.GetPropertyValue<string>("lastServiced"); }

		///<summary>
		/// Length
		///</summary>
		[ImplementPropertyType("length")]
		public int Length
		{
			get { return GetLength(this); }
		}

		/// <summary>Static getter for Length</summary>
		public static int GetLength(ICarFeatures that) { return that.GetPropertyValue<int>("length"); }

		///<summary>
		/// Luggage capacity
		///</summary>
		[ImplementPropertyType("luggageCapacity")]
		public int LuggageCapacity
		{
			get { return GetLuggageCapacity(this); }
		}

		/// <summary>Static getter for Luggage capacity</summary>
		public static int GetLuggageCapacity(ICarFeatures that) { return that.GetPropertyValue<int>("luggageCapacity"); }

		///<summary>
		/// Milage
		///</summary>
		[ImplementPropertyType("milage")]
		public int Milage
		{
			get { return GetMilage(this); }
		}

		/// <summary>Static getter for Milage</summary>
		public static int GetMilage(ICarFeatures that) { return that.GetPropertyValue<int>("milage"); }

		///<summary>
		/// Model
		///</summary>
		[ImplementPropertyType("model")]
		public string Model
		{
			get { return GetModel(this); }
		}

		/// <summary>Static getter for Model</summary>
		public static string GetModel(ICarFeatures that) { return that.GetPropertyValue<string>("model"); }

		///<summary>
		/// MOT
		///</summary>
		[ImplementPropertyType("mot")]
		public DateTime Mot
		{
			get { return GetMot(this); }
		}

		/// <summary>Static getter for MOT</summary>
		public static DateTime GetMot(ICarFeatures that) { return that.GetPropertyValue<DateTime>("mot"); }

		///<summary>
		/// Number of seats
		///</summary>
		[ImplementPropertyType("numberOfSeats")]
		public int NumberOfSeats
		{
			get { return GetNumberOfSeats(this); }
		}

		/// <summary>Static getter for Number of seats</summary>
		public static int GetNumberOfSeats(ICarFeatures that) { return that.GetPropertyValue<int>("numberOfSeats"); }

		///<summary>
		/// Number of Valves
		///</summary>
		[ImplementPropertyType("numberOfValves")]
		public int NumberOfValves
		{
			get { return GetNumberOfValves(this); }
		}

		/// <summary>Static getter for Number of Valves</summary>
		public static int GetNumberOfValves(ICarFeatures that) { return that.GetPropertyValue<int>("numberOfValves"); }

		///<summary>
		/// Owner
		///</summary>
		[ImplementPropertyType("owner")]
		public string Owner
		{
			get { return GetOwner(this); }
		}

		/// <summary>Static getter for Owner</summary>
		public static string GetOwner(ICarFeatures that) { return that.GetPropertyValue<string>("owner"); }

		///<summary>
		/// Pod Image
		///</summary>
		[ImplementPropertyType("podImage")]
		public IPublishedContent PodImage
		{
			get { return GetPodImage(this); }
		}

		/// <summary>Static getter for Pod Image</summary>
		public static IPublishedContent GetPodImage(ICarFeatures that) { return that.GetPropertyValue<IPublishedContent>("podImage"); }

		///<summary>
		/// Price
		///</summary>
		[ImplementPropertyType("price")]
		public int Price
		{
			get { return GetPrice(this); }
		}

		/// <summary>Static getter for Price</summary>
		public static int GetPrice(ICarFeatures that) { return that.GetPropertyValue<int>("price"); }

		///<summary>
		/// Registration year
		///</summary>
		[ImplementPropertyType("registrationYear")]
		public DateTime RegistrationYear
		{
			get { return GetRegistrationYear(this); }
		}

		/// <summary>Static getter for Registration year</summary>
		public static DateTime GetRegistrationYear(ICarFeatures that) { return that.GetPropertyValue<DateTime>("registrationYear"); }

		///<summary>
		/// Service History
		///</summary>
		[ImplementPropertyType("serviceHistory")]
		public string ServiceHistory
		{
			get { return GetServiceHistory(this); }
		}

		/// <summary>Static getter for Service History</summary>
		public static string GetServiceHistory(ICarFeatures that) { return that.GetPropertyValue<string>("serviceHistory"); }

		///<summary>
		/// Top Speed
		///</summary>
		[ImplementPropertyType("topSpeed")]
		public int TopSpeed
		{
			get { return GetTopSpeed(this); }
		}

		/// <summary>Static getter for Top Speed</summary>
		public static int GetTopSpeed(ICarFeatures that) { return that.GetPropertyValue<int>("topSpeed"); }

		///<summary>
		/// Transmission
		///</summary>
		[ImplementPropertyType("transmission")]
		public string Transmission
		{
			get { return GetTransmission(this); }
		}

		/// <summary>Static getter for Transmission</summary>
		public static string GetTransmission(ICarFeatures that) { return that.GetPropertyValue<string>("transmission"); }

		///<summary>
		/// Tyre Size
		///</summary>
		[ImplementPropertyType("tyreSize")]
		public string TyreSize
		{
			get { return GetTyreSize(this); }
		}

		/// <summary>Static getter for Tyre Size</summary>
		public static string GetTyreSize(ICarFeatures that) { return that.GetPropertyValue<string>("tyreSize"); }

		///<summary>
		/// Vehicle description: Please provide a short description of the car
		///</summary>
		[ImplementPropertyType("vehicleDescription")]
		public string VehicleDescription
		{
			get { return GetVehicleDescription(this); }
		}

		/// <summary>Static getter for Vehicle description</summary>
		public static string GetVehicleDescription(ICarFeatures that) { return that.GetPropertyValue<string>("vehicleDescription"); }

		///<summary>
		/// Vehicle tax band
		///</summary>
		[ImplementPropertyType("vehicleTaxBand")]
		public string VehicleTaxBand
		{
			get { return GetVehicleTaxBand(this); }
		}

		/// <summary>Static getter for Vehicle tax band</summary>
		public static string GetVehicleTaxBand(ICarFeatures that) { return that.GetPropertyValue<string>("vehicleTaxBand"); }

		///<summary>
		/// Warranty
		///</summary>
		[ImplementPropertyType("warranty")]
		public string Warranty
		{
			get { return GetWarranty(this); }
		}

		/// <summary>Static getter for Warranty</summary>
		public static string GetWarranty(ICarFeatures that) { return that.GetPropertyValue<string>("warranty"); }

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("width")]
		public int Width
		{
			get { return GetWidth(this); }
		}

		/// <summary>Static getter for Width</summary>
		public static int GetWidth(ICarFeatures that) { return that.GetPropertyValue<int>("width"); }

		///<summary>
		/// 0-60
		///</summary>
		[ImplementPropertyType("zeroToSixty")]
		public int ZeroToSixty
		{
			get { return GetZeroToSixty(this); }
		}

		/// <summary>Static getter for 0-60</summary>
		public static int GetZeroToSixty(ICarFeatures that) { return that.GetPropertyValue<int>("zeroToSixty"); }
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public string UmbracoFile
		{
			get { return this.GetPropertyValue<string>("umbracoFile"); }
		}
	}

	/// <summary>Image For home page</summary>
	[PublishedContentModel("Image1")]
	public partial class Image1 : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image1";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image1(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image1, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Big text: Please provide the second line of big text
		///</summary>
		[ImplementPropertyType("bigText")]
		public string BigText
		{
			get { return this.GetPropertyValue<string>("bigText"); }
		}

		///<summary>
		/// Button Link: Please select a destination for the button
		///</summary>
		[ImplementPropertyType("buttonLink")]
		public IPublishedContent ButtonLink
		{
			get { return this.GetPropertyValue<IPublishedContent>("buttonLink"); }
		}

		///<summary>
		/// Button Text: Please provide some text for the button
		///</summary>
		[ImplementPropertyType("buttonText")]
		public string ButtonText
		{
			get { return this.GetPropertyValue<string>("buttonText"); }
		}

		///<summary>
		/// Big Text: Please provide the some text (Large Letters)
		///</summary>
		[ImplementPropertyType("mainText")]
		public string MainText
		{
			get { return this.GetPropertyValue<string>("mainText"); }
		}

		///<summary>
		/// Small Text: Please provide some text (small text)
		///</summary>
		[ImplementPropertyType("smallText")]
		public string SmallText
		{
			get { return this.GetPropertyValue<string>("smallText"); }
		}

		///<summary>
		/// Small text 2: Please provide the second line of small text
		///</summary>
		[ImplementPropertyType("smallText2")]
		public string SmallText2
		{
			get { return this.GetPropertyValue<string>("smallText2"); }
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}
